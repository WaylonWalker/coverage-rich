[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "coverage-rich"
description = 'A rich terminal report for coveragepy.'
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
  { name = "Waylon S. Walker", email = "waylon@waylonwalker.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "rich",
  "textual",
  "typer",
  "anyconfig",
  "coverage",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/waylonwalker/coverage-rich#readme"
Issues = "https://github.com/waylonwalker/coverage-rich/issues"
Source = "https://github.com/waylonwalker/coverage-rich"
Changelog = "https://github.com/waylonwalker/coverage-rich"

[project.scripts]
coverage-rich = "coverage_rich.cli.app:app"

[tool.hatch.version]
path = "coverage_rich/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "ipython",
  "mypy",
  "pyflyby",
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "pytest-rich",
  "ruff",
  "black",
]
[tool.hatch.envs.default.scripts]
test = "coverage run -m pytest"
covreport = "coverage-rich report"
cov = ['test', 'covreport']
lint = "ruff coverage_rich"
format = "black coverage_rich"
format-check = "black --check coverage_rich"
build-docs = "markata build"
lint-test = [
 "lint",
 "format-check",
 "cov",
]
test-lint = "lint-test"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.coverage.paths]
source = [ "tests", "coverage_rich" ]

[tool.coverage.run]
branch = true
omit = [
  "coverage_rich/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
addopts = "-ra -q --rich"
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.coverage_rich]
fail-under=24
